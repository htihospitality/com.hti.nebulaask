steps:

#   Build uberjar
  - name: clojure:openjdk-11-tools-deps
    args: ['bash', '../cloudbuild/build.sh']
    dir: 'server'
    secretEnv: ['AWS_CREDENTIALS_ACCESS', 'AWS_CREDENTIALS_SECRET', 'AWS_REGION', 'GOOGLE_ARTIFACT_PASSWORD']

  # Copy uberjar to compute engine vm
  - name: gcr.io/cloud-builders/gcloud
    args: ['compute', 'scp', '/workspace/target/uberjar/metabase.jar', 'gs://ask_nebula_jar', '--project=hti-${_ENV}', '--zone=europe-west1-d']
    dir: 'server'

#  # Backup jar
#  - name: gcr.io/cloud-builders/gcloud
#    args: ['compute', 'ssh', 'metabase', '--command=/opt/metabase/backup.sh',  '--project=hti-${_ENV}', '--zone=europe-west1-d']
#    dir: 'server'
#
#  # Copy uberjar to compute engine vm
#  - name: gcr.io/cloud-builders/gcloud
#    args: ['compute', 'scp', '/workspace/target/uberjar/metabase.jar', 'metabase:/opt/metabase/metabase.jar', '--project=hti-${_ENV}', '--zone=europe-west1-d']
#    dir: 'server'
#
#  # Restart payment-switch service
#  - name: gcr.io/cloud-builders/gcloud
#    args: ['compute', 'ssh', 'metabase', '--command=/opt/metabase/restart.sh', '--project=hti-${_ENV}', '--zone=europe-west1-d']
#    dir: 'server'

substitutions:
  _ENV: 'apps'

availableSecrets:
  secretManager:
    - versionName: projects/1006690200145/secrets/aws-credentials-secret-access-key/versions/1
      env: 'AWS_CREDENTIALS_SECRET'
    - versionName: projects/1006690200145/secrets/aws-credentials-access-key/versions/1
      env: 'AWS_CREDENTIALS_ACCESS'
    - versionName: projects/1006690200145/secrets/aws-region/versions/1
      env: 'AWS_REGION'
    - versionName: projects/1006690200145/secrets/google-artifact-password/versions/1
      env: 'GOOGLE_ARTIFACT_PASSWORD'
options:
  logging: CLOUD_LOGGING_ONLY

timeout: 3600s
